@model Calender.Models.IndexViewModel
@{
    ViewBag.Title = "Ändere dein Profil";
}
<style>
    #user_profil {
        display: flex;
        flex-direction: column;
        background: #f9f9f9;
    }

        #user_profil div {
            display: -webkit-box;
            margin-bottom:15px;
        }
</style>
<h2>@ViewBag.Title.</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
<div id="user_profil">
    <header>
        <h2>Profil:</h2>
    </header>
    <main class="main">
        <div>
            <label class="col-md-3 control-label">Username:</label>
            <div class="col-md-6">
                 @Model.Username
            </div>
        </div>
        <div>
            <label class="col-md-3 control-label">Passwort:</label>
            <div class="col-md-6">
                <a href="@Url.Action("ChangePassword","Manage")" class="btn btn-info btn-sm" target="_blank">
                    <span class="glyphicon glyphicon-pencil"></span> Ändern
                    @*@if (Model.HasPassword)
                {
                    @Html.ActionLink("Ändere dein Passwort", "ChangePassword")
                }
                else
                {
                    @Html.ActionLink("Erstellen", "SetPassword")
                }*@
                </a>
            </div>
        </div>
        <div>
            <label class="col-md-3 control-label">External Logins: @Model.Logins.Count</label>
            <div class="col-md-6">
                <a href="@Url.Action("ManageLogins","Manage")" class="btn btn-info btn-sm" target="_blank">
                    <span class="glyphicon glyphicon-edit"></span> Ändern
                </a>
            </div>
        </div>
        @*
            Phone Numbers can used as a second factor of verification in a two-factor authentication system.

             See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support two-factor authentication using SMS.

             Uncomment the following block after you have set up two-factor authentication
        *@
        @*
            <dt>Phone Number:</dt>
            <dd>
                @(Model.PhoneNumber ?? "None")
                @if (Model.PhoneNumber != null)
                {
                    <br />
                    <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
                    using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
                    }
                }
                else
                {
                    <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
                }
            </dd>
        *@

        <div>
            <label class="col-md-3 control-label">Two-Factor Authentication:</label>
            <div class="col-md-6">
                There are no two-factor authentication providers configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support two-factor authentication.
            </div>
            @*@if (Model.TwoFactor)
                {
                    using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Enabled
                        <input type="submit" value="Disable" class="btn btn-link" />
                        </text>
                    }
                }
                else
                {
                    using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Disabled
                        <input type="submit" value="Enable" class="btn btn-link" />
                        </text>
                    }
                }*@
        </div>
        <div>
            <label class="col-md-3 control-label">Charaktere</label>
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Rasse</th>
                            <th>Klasse</th>
                            <th>Name</th>
                        </tr>
                    </thead>
                    <tbody id="addChar_table_body"></tbody>
                </table>
            </div>
            <div class="col-md-3">
                <button id="addChar" class="btn btn-info btn-sm" target="_blank">
                    <span class="glyphicon glyphicon-plus-sign"></span> Hinzufügen
                </button>
            </div>
        </div>
    </main>
</div>
<link href="~/Scripts/custom/detailWindow.css" rel="stylesheet" />
<div id="addCharWindow" ng-app="user" class="modal" ng-controller="UserCharController">
    <!-- Modal content -->
    <div class="modal-content">

        <div class="modal-header">
            <span class="close">&times;</span>
            <h2>Modal Header</h2>
        </div>
        <form name="addCharForm" class="modal-body" novalidate>
            <div class="row">
                <div>
                    <label class="col-md-3 control-label">Rasse:</label>
                    <select ng-model="user.char.rasse" class='form-control' required>
                        <option>Char</option>
                        <option>Asura</option>
                    </select>
                </div>
                <div>
                    <label class="col-md-3 control-label">Klasse:</label>
                    <select ng-model="user.char.klasse" class='form-control' required>
                        <option>Tempest</option>
                        <option>Condi Ranger</option>
                    </select>
                </div>
                <div>
                    <label class="col-md-3 control-label">Name:</label>
                    <input ng-model="user.char.name" class="form-control" placeholder="Hier den Namen eingeben..." required>
                </div>
            </div>
        </form>
        <div class="modal-footer">
            <input type="button" ng-click="reset()" class="btn btn-primary pull-right" value="Zurücksetzen" id="reset" />
            <input ng-click="update(user)" class="btn btn-primary pull-right" ng-disabled="addCharForm.$invalid" value="Speichern" />
        </div>
    </div>

</div>
<script>
    function addNewChartoTable(rasse, klasse, name) {
        $("#addChar_table_body").append("<tr>" +
                                            "<td>" +
                                                "<img title='"+rasse+"' src='/img/klassen/" + rasse + ".png' alt='" + rasse + "'/>" +
                                            "</td>" +
                                            "<td>" +
                                                "<span title='Klasse'>" + klasse + "</span>" +
                                            "<td>" +
                                                "<span title='Klasse'>" + name + "</span>" +
                                            "</td>" +
                                        "</tr>");
    }
    $("#addChar").click(function () {
        $("#addCharWindow.modal").css("display", "block");
    });
    var eventApp = angular.module('user', []);
    eventApp.controller('UserCharController', ['$scope', function ($scope) {
        console.log("im UserCharController controller");
        $scope.update = function (user) {
            if ($scope.addCharForm.$valid) {
                console.log(user);
                $.each(user, function (char, user) {
                    addNewChartoTable(user.rasse, user.klasse, user.name);
                });
                $scope.user = {};
                ////Close the Window and reset the create form
                $("#addCharWindow.modal").css("display", "none");
            }
        };

        $scope.reset = function () {
            //reset all inputs
            $scope.user = {};
        };

        $scope.reset();
    }]);
</script>
